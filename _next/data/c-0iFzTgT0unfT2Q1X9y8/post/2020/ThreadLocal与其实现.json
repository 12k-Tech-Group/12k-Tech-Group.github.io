{"pageProps":{"title":"ThreadLocal与其实现","date":"2020-08-26 11:50","author":[{"name":"leohawke","link":"https://github.com/leohawke"},{"name":"frederick-vs-ja","link":"https://github.com/frederick-vs-ja"}],"html":"<h1>ThreadLocal与其实现</h1>\n<p><img src=\"/assets/2020/assets/1598414036_27188.png\" alt=\"图1\"></p>\n<p>C++ <code>thread_local</code> 及 C <code>_Thread_local</code> 变量（线程局部变量， <em>thread local variables</em> ）相关注记</p>\n<ul>\n<li>存储所用的空间（线程局部存储， <em>thread local storage</em> ， <em>TLS</em> ）随线程创建而分配，随线程终止而释放。</li>\n<li>线程局部变量的初始化在 TLS 分配后、线程函数执行前进行，同样地析构在线程函数退出后、 TLS 释放前执行。初始化顺序类似全局（静态存储期的命名空间/类作用域）变量和函数内的静态存储期变量。</li>\n<li>通常实现上，每个线程所拥有的线程局部存储大小及布局均相同，且在编译时确定，而线程局部变量的访问方式是通过编译时确定的偏移加存储于特定寄存器的 TLS 基址（如图）。</li>\n</ul>\n"},"__N_SSG":true}